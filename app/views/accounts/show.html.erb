<h1 class="page-title">Account: <%= @account.name %></h1>
<% content_for :flash_override do %>
  <div class="flash-slot">
    <% if flash[:notice].present? %>
      <div class="notice-banner"><%= flash[:notice] %></div>
    <% end %>
    <% if flash[:alert].present? %>
      <div class="alert-banner"><%= flash[:alert] %></div>
    <% end %>
    <div id="client-flash-banner" class="alert-banner" style="display:none;"></div>
  </div>
<% end %>
<%= yield :flash_override %>

<div class="assignment-grid">
  <div class="panel panel-left">
    <h2 class="panel-title">Product Licenses</h2>
    <form id="assign-form" action="<%= account_license_assignments_path(@account) %>" method="post" style="display:none;">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
      <div id="assign-hidden-products"></div>
      <div id="assign-hidden-users"></div>
    </form>
    <form id="unassign-form" action="<%= unassign_account_license_assignments_path(@account) %>" method="post" style="display:none;">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
      <div id="unassign-hidden-products"></div>
      <div id="unassign-hidden-users"></div>
    </form>
    <div id="product-list" class="listbox" style="overflow:auto; max-height:340px; border:1px solid #000;">
      <% @subscription_rows.each do |row| %>
        <label class="row-check" style="display:block; padding:4px 6px; cursor:pointer;">
          <input type="checkbox" class="product-check" name="product_ids[]" value="<%= row[:product_id] %>" data-remaining="<%= row[:remaining] %>" data-label="<%= row[:product_name] %>" style="margin-right:6px;">
          <%= row[:product_name] %> (<%= row[:remaining] %>/<%= row[:number_of_licenses] %>)
        </label>
      <% end %>
    </div>
    <div class="below-list">
      <button type="button" id="unselect-products-btn" class="btn">Unselect products</button>
    </div>
  </div>

  <div class="panel action-panel">
    <div id="assign-warning" class="alert-banner" style="display:none;"></div>
    <button type="button" id="assign-btn" class="btn btn-large">Assign</button>
    <button type="button" id="unassign-btn" class="btn btn-large">Unassign</button>
    <p>
      <%= link_to "Manage Users", account_users_path(@account) %> |
      <%= link_to "Manage Subscriptions", account_subscriptions_path(@account) %>
    </p>
  </div>

  <div class="panel panel-right">
    <h2 class="panel-title">Users</h2>
    <div id="user-list" class="listbox" style="overflow:auto; max-height:340px; border:1px solid #000;">
      <% @users.each do |user| %>
        <label class="row-check" style="display:block; padding:4px 6px; cursor:pointer;">
          <input type="checkbox" class="user-check" name="user_ids[]" value="<%= user.id %>" style="margin-right:6px;">
          <%= user.name %>
        </label>
      <% end %>
    </div>
    <div class="below-list">
      <button type="button" id="unselect-users-btn" class="btn">Unselect users</button>
    </div>
  </div>
</div>

<style>
  .notice-banner { background:#e6ffed; border:1px solid #b7ebc6; color:#2f7d32; padding:10px; margin-bottom:12px; }
  .listbox .row-check { user-select: none; }
  .listbox .row-check:hover { background:#f2f2f2; }
  .listbox .row-check.selected { background:#e5e5e5; }
  .listbox .row-check input { display: none; }
</style>
<script>
  (function(){
    // Helpers

    var productsSelect = document.getElementById('product-list');
    var usersSelect = document.getElementById('user-list');
    var assignBtn = document.getElementById('assign-btn');
    var unassignBtn = document.getElementById('unassign-btn');
    var unselectProductsBtn = document.getElementById('unselect-products-btn');
    var unselectUsersBtn = document.getElementById('unselect-users-btn');
    var assignWarning = document.getElementById('assign-warning');
    var clientFlashBanner = document.getElementById('client-flash-banner');

    function setArrayInputs(containerId, name, values){
      var container = document.getElementById(containerId);
      if(!container) return;
      container.innerHTML = '';
      values.forEach(function(v){
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = name + '[]';
        input.value = v;
        container.appendChild(input);
      });
    }

    function selectedProductInputs(){ return Array.from(document.querySelectorAll('#product-list input.product-check:checked')); }
    function selectedUserInputs(){ return Array.from(document.querySelectorAll('#user-list input.user-check:checked')); }
    function remainingFor(input){ return parseInt(input.dataset.remaining || '0', 10); }
    function productLabel(input){ return input.dataset.label || input.value; }

    function validateCapacity(selectedProductOptions, selectedUserIds){
      var issues = [];
      var userCount = selectedUserIds.length;
      selectedProductOptions.forEach(function(opt){
        var remaining = remainingFor(opt);
        if(userCount > remaining){
          issues.push('[' + productLabel(opt) + '] insufficient capacity (' + remaining + ' remaining).');
        }
      });
      return issues;
    }

    function listToSentence(names){
      if(names.length <= 1){ return names.join(''); }
      var allButLast = names.slice(0, -1).join(', ');
      var last = names[names.length - 1];
      return allButLast + ' and ' + last;
    }

    function capacityAtLimitMessage(selectedProductOptions, selectedUserIds){
      var userCount = selectedUserIds.length;
      if(userCount === 0 || selectedProductOptions.length === 0){ return null; }
      var capped = selectedProductOptions.filter(function(opt){ return remainingFor(opt) === userCount && userCount > 0; });
      if(capped.length === 0){ return null; }
      var labels = capped.map(productLabel);
      var noun = userCount === 1 ? 'user' : 'users';
      return 'You can only assign ' + userCount + ' ' + noun + ' as ' + listToSentence(labels) + ' only have ' + userCount + ' licenses remaining';
    }

    function showAssignWarning(messages){
      if(clientFlashBanner){
        clientFlashBanner.innerHTML = messages.join('<br/>');
        clientFlashBanner.style.display = 'block';
      } else if(assignWarning){
        assignWarning.innerHTML = messages.join('<br/>');
        assignWarning.style.display = 'block';
      }
    }

    function hideAssignWarning(){
      if(clientFlashBanner){ clientFlashBanner.style.display = 'none'; clientFlashBanner.innerHTML=''; }
      if(assignWarning){ assignWarning.style.display = 'none'; assignWarning.innerHTML=''; }
    }

    function updateAssignWarning(){
      var selectedProducts = selectedProductInputs();
      var selectedUsers = selectedUserInputs().map(function(i){ return i.value; });
      var overCapacity = validateCapacity(selectedProducts, selectedUsers);
      if(overCapacity.length > 0){ showAssignWarning(overCapacity); return; }
      var atLimit = capacityAtLimitMessage(selectedProducts, selectedUsers);
      if(atLimit){ showAssignWarning([atLimit]); return; }
      hideAssignWarning();
    }

    assignBtn && assignBtn.addEventListener('click', function(){
      var pInputs = selectedProductInputs();
      var selectedProductIds = pInputs.map(function(i){ return i.value; });
      var selectedUsers = selectedUserInputs().map(function(i){ return i.value; });
      if(selectedProductIds.length===0 || selectedUsers.length===0){
        showAssignWarning(['Please select at least one product and one user.']);
        return;
      }

      var capacityIssues = validateCapacity(pInputs, selectedUsers);
      if(capacityIssues.length > 0){
        showAssignWarning(capacityIssues);
        return; // block submission
      }

      hideAssignWarning();
      setArrayInputs('assign-hidden-products', 'product_ids', selectedProductIds);
      setArrayInputs('assign-hidden-users', 'user_ids', selectedUsers);
      document.getElementById('assign-form').submit();
    });

    unassignBtn && unassignBtn.addEventListener('click', function(){
      var ps = selectedProductInputs().map(function(i){ return i.value; });
      var us = selectedUserInputs().map(function(i){ return i.value; });
      if(ps.length===0 || us.length===0){
        showAssignWarning(['Please select at least one product and one user.']);
        return;
      }
      setArrayInputs('unassign-hidden-products', 'product_ids', ps);
      setArrayInputs('unassign-hidden-users', 'user_ids', us);
      document.getElementById('unassign-form').submit();
    });

    unselectProductsBtn && unselectProductsBtn.addEventListener('click', function(){
      var container = productsSelect;
      if(container){
        container.querySelectorAll('input.product-check').forEach(function(cb){ cb.checked = false; });
        container.querySelectorAll('.row-check').forEach(function(el){ el.classList.remove('selected'); });
      }
      updateAssignWarning();
    });

    unselectUsersBtn && unselectUsersBtn.addEventListener('click', function(){
      var container = usersSelect;
      if(container){
        container.querySelectorAll('input.user-check').forEach(function(cb){ cb.checked = false; });
        container.querySelectorAll('.row-check').forEach(function(el){ el.classList.remove('selected'); });
      }
      updateAssignWarning();
    });

    function refreshSelectionUI(){
      if(productsSelect){
        productsSelect.querySelectorAll('.row-check').forEach(function(row){
          var input = row.querySelector('input.product-check');
          if(!input) return;
          row.classList.toggle('selected', !!input.checked);
        });
      }
      if(usersSelect){
        usersSelect.querySelectorAll('.row-check').forEach(function(row){
          var input = row.querySelector('input.user-check');
          if(!input) return;
          row.classList.toggle('selected', !!input.checked);
        });
      }
    }

    productsSelect && productsSelect.addEventListener('change', function(){
      refreshSelectionUI();
      updateAssignWarning();
    });

    usersSelect && usersSelect.addEventListener('change', function(){
      refreshSelectionUI();
      updateAssignWarning();
    });

    // Make entire row clickable to toggle checkbox state
    function bindRowToggle(container, checkboxSelector){
      if(!container) return;
      container.addEventListener('click', function(e){
        var row = e.target.closest('.row-check');
        if(!row || !container.contains(row)) return;
        var input = row.querySelector(checkboxSelector);
        if(!input) return;
        if(e.target !== input){
          e.preventDefault();
          input.checked = !input.checked;
          var evt = new Event('change', { bubbles: true });
          input.dispatchEvent(evt);
        }
      });
    }
    bindRowToggle(productsSelect, 'input.product-check');
    bindRowToggle(usersSelect, 'input.user-check');

    // Initial selection styling sync
    refreshSelectionUI();
  })();
</script>

<div style="margin-top:24px;">
  <%= link_to "View assigned licenses", account_license_assignments_path(@account) %>
</div>


